% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ingest_into_database.R
\name{ingest_into_database}
\alias{ingest_into_database}
\title{ingest_into_database}
\usage{
ingest_into_database(
  path_to_ras_dbase,
  top_of_dir_to_scrape,
  code_to_place_in_source,
  proj_override = NULL,
  apply_vdat_trans = FALSE,
  is_quiet = FALSE,
  is_verbose = FALSE,
  quick_check = FALSE,
  quick_hull = FALSE,
  overwrite = FALSE,
  parallel_proc = TRUE,
  free_treads = 2
)
}
\arguments{
\item{path_to_ras_dbase}{A path to a directory to write your RRASSLED directory to.  See Methods and Structures for more details.  is location agnostic so this can be either a local path or an s3 bucket}

\item{top_of_dir_to_scrape}{The top of the directory to look for models.  Will greedy search and find all models as described in Ingest logic}

\item{code_to_place_in_source}{a string to place into the model source column.  Useful to distinguish data authors}

\item{proj_override}{a string to override projection information should none be found, Default: NULL}

\item{apply_vdat_trans}{Should VDATUM be applied to the HEC-RAS model geometry.  See https://vdatum.noaa.gov/, Default: FALSE}

\item{is_quiet}{flag to determine whether print statements are suppressed, TRUE to suppress messages and FALSE to show them, Default: FALSE}

\item{is_verbose}{flag to determine whether internal print statements (i.e. cross section parsing, vdat trans, file info) are suppressed, TRUE to show these messages and FALSE to suppress them, Default: FALSE}

\item{quick_check}{on initial ingest, if the model name is found we assume the models are the same without fully spatializing them which saves processing time, Default: FALSE}

\item{quick_hull}{a flag to dictate whether the end points of a models cross sections are used or if the entire point database is fed to the hull creation, Default: FALSE}

\item{overwrite}{overwrite files if we find identical models, Default: FALSE}

\item{parallel_proc}{Flag to determine if this should this parallel process, will check for enough free cores and boot this back if it exceeds available resources.  Will suppress all intermediate messages if active, Default: TRUE}

\item{free_treads}{number of threads to leave free if parallel processing, Default: 2}
}
\value{
a RRASSLE'd catalog of models
}
\description{
ingest files from a source directory on your drive into a formatted input directory
}
\details{
here 'ingest' means add to our accounting system and database refers to our folder structure
}
\examples{
\dontrun{
if(interactive()){
 #EXAMPLE1
 RRASSLER::ingest_into_database(path_to_ras_dbase = "G:/data/ras_catalog3/",
top_of_dir_to_scrape = "G:/data/ras_catalog/_temp/BLE/12090301/12090301_models/Model/Willbarger Creek-Colorado River/WILLBARGER 0516/",
code_to_place_in_source = "test",
proj_override = "EPSG:2277",
apply_vdat_trans = FALSE,
is_quiet = FALSE,
is_verbose = TRUE,
quick_check = FALSE,
quick_hull = FALSE,
overwrite = FALSE,
parallel_proc = FALSE)
 }
}
}
\seealso{
\code{\link[glue]{glue}}
 \code{\link[stringr]{str_sub}}
 \code{\link[parallel]{detectCores}}, \code{\link[parallel]{makeCluster}}
 \code{\link[doParallel]{registerDoParallel}}
 \code{\link[foreach]{foreach}}

Other ingest: 
\code{\link{cloud_ingest_record}()},
\code{\link{disk_ingest_record}()},
\code{\link{ingest_FEMA6_BLE}()}
}
\concept{ingest}
